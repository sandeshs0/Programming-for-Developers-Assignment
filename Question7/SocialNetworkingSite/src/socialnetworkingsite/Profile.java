/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package socialnetworkingsite;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;


/**
 *
 * @author hello
 */
public class Profile extends javax.swing.JFrame {
int userID;
    /**
     * Creates new form Profile
     */
    public Profile(int userID) {
        this.userID=userID;
        initComponents();
        userLabel.setText(getUsernameByUserId(userID));
        followerLabel.setText(String.valueOf(getFollowers(userID)));
        followingLabel.setText(String.valueOf(getFollowing(userID)));
        getFollowerList(userID,followersList);
        getFollowingList(userID,followingList);


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        followerList = new javax.swing.JPanel();
        followingLabel = new javax.swing.JLabel();
        userLabel = new javax.swing.JLabel();
        followerLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        followersList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        followingList = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        followerList.setBackground(new java.awt.Color(23, 29, 40));

        followingLabel.setFont(new java.awt.Font("Felix Titling", 1, 48)); // NOI18N
        followingLabel.setForeground(new java.awt.Color(204, 146, 246));
        followingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        followingLabel.setText("10");

        userLabel.setFont(new java.awt.Font("DialogInput", 1, 36)); // NOI18N
        userLabel.setForeground(new java.awt.Color(255, 255, 255));
        userLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        userLabel.setText("@Username");

        followerLabel.setFont(new java.awt.Font("Felix Titling", 1, 48)); // NOI18N
        followerLabel.setForeground(new java.awt.Color(204, 146, 246));
        followerLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        followerLabel.setText("10");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Following");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Followers");

        followersList.setBorder(new javax.swing.border.MatteBorder(null));
        followersList.setFont(new java.awt.Font("Segoe UI Variable", 0, 18)); // NOI18N
        followersList.setForeground(new java.awt.Color(0, 0, 102));
        jScrollPane1.setViewportView(followersList);

        followingList.setBorder(new javax.swing.border.MatteBorder(null));
        followingList.setFont(new java.awt.Font("Segoe UI Variable", 0, 18)); // NOI18N
        followingList.setForeground(new java.awt.Color(0, 0, 102));
        jScrollPane2.setViewportView(followingList);

        jButton1.setBackground(new java.awt.Color(153, 0, 0));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("<- Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout followerListLayout = new javax.swing.GroupLayout(followerList);
        followerList.setLayout(followerListLayout);
        followerListLayout.setHorizontalGroup(
            followerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(followerListLayout.createSequentialGroup()
                .addGap(170, 170, 170)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(164, 164, 164))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, followerListLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79))
            .addGroup(followerListLayout.createSequentialGroup()
                .addGroup(followerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(followerListLayout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(followerLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(138, 138, 138)
                        .addComponent(followingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(followerListLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jButton1)))
                .addGap(138, 141, Short.MAX_VALUE))
            .addGroup(followerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(followerListLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(userLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 748, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        followerListLayout.setVerticalGroup(
            followerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(followerListLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jButton1)
                .addGap(57, 57, 57)
                .addGroup(followerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(followerLabel)
                    .addComponent(followingLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(followerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(followerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
            .addGroup(followerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(followerListLayout.createSequentialGroup()
                    .addGap(26, 26, 26)
                    .addComponent(userLabel)
                    .addContainerGap(536, Short.MAX_VALUE)))
        );

        getContentPane().add(followerList, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 760, 610));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new Dashboard(userID).setVisible(true);
                dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

private String getUsernameByUserId(int userId) {
    Connection conn = dbConnection.dbconnect();
    String username=null;
    try {
        // Prepare SQL query
        String query = "SELECT UserName FROM Users WHERE UserId = ?";
        
        // Execute query
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setInt(1, userId);
        ResultSet rs = pstmt.executeQuery();
        
        // Process the result set
        if (rs.next()) {
            username = rs.getString("username");
        }
        conn.close();
    } catch (Exception ex) {
        ex.printStackTrace();
    }
    return username;
}
private int getFollowers(int userId){
    Connection conn = dbConnection.dbconnect();
    int count = 0;
    try {
        // Prepare SQL query
        String query = "SELECT COUNT(*) FROM Edge WHERE followee_id = ?";
        
        // Execute query
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setInt(1, userId);
        ResultSet rs = pstmt.executeQuery();
        
        // Process the result set
        if (rs.next()) {
            count = rs.getInt(1);
        }
        conn.close();
    } catch (Exception ex) {
        ex.printStackTrace();
    }
    return count;
}
public void getFollowerList(int userId, JList<String> followerList) {
    DefaultListModel<String> model = new DefaultListModel<>();
    Connection conn = dbConnection.dbconnect();
    try {
        // Prepare SQL query to retrieve follower IDs
        String query = "SELECT follower_id FROM Edge WHERE followee_id = ?";
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setInt(1, userId);
        ResultSet rs = pstmt.executeQuery();

        // Retrieve follower IDs and fetch corresponding usernames
        while (rs.next()) {
            int followerId = rs.getInt("follower_id");
            String followerUsername = getUsernameByUserId(followerId); // Assuming you have a method to get username by userId
            model.addElement(followerUsername);
        }
        
        // Set the model to the followerList JList
        followerList.setModel(model);

    } catch (Exception ex) {
        ex.printStackTrace();
    } finally {
        try {
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}

public void getFollowingList(int userId, JList<String> followingList) {
    DefaultListModel<String> model = new DefaultListModel<>();
    Connection conn = dbConnection.dbconnect();
    try {
        // Prepare SQL query to retrieve follower IDs
        String query = "SELECT followee_id FROM Edge WHERE follower_id = ?";
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setInt(1, userId);
        ResultSet rs = pstmt.executeQuery();

        // Retrieve follower IDs and fetch corresponding usernames
        while (rs.next()) {
            int followeeId = rs.getInt("followee_id");
            String followeeUsername = getUsernameByUserId(followeeId); // Assuming you have a method to get username by userId
            model.addElement(followeeUsername);
        }
        
        // Set the model to the followerList JList
        followingList.setModel(model);

    } catch (Exception ex) {
        ex.printStackTrace();
    } finally {
        try {
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}

private int getFollowing(int userId){
    Connection conn = dbConnection.dbconnect();
    int count = 0;
    try {
        // Prepare SQL query
        String query = "SELECT COUNT(*) FROM Edge WHERE follower_id = ?";
        
        // Execute query
        PreparedStatement pstmt = conn.prepareStatement(query);
        pstmt.setInt(1, userId);
        ResultSet rs = pstmt.executeQuery();
        
        // Process the result set
        if (rs.next()) {
            count = rs.getInt(1);
        }
        conn.close();
    } catch (Exception ex) {
        ex.printStackTrace();
    }
    return count;
}


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Profile.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Profile(0).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel followerLabel;
    private javax.swing.JPanel followerList;
    private javax.swing.JList<String> followersList;
    private javax.swing.JLabel followingLabel;
    private javax.swing.JList<String> followingList;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel userLabel;
    // End of variables declaration//GEN-END:variables
}
